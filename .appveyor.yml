#
# Copyright (c) 2016 Marat Abrarov (abrarov@gmail.com)
#
# Distributed under the Boost Software License, Version 1.0. (See accompanying
# file LICENSE_1_0.txt or copy at http://www.boost.org/LICENSE_1_0.txt)
#

os: Visual Studio 2015

build:
  verbosity: detailed

platform:
  - x64
  - Win32

configuration:
  - Debug
  - Release

environment:
  matrix:
    - MSVC_VERSION: 14.0
      BOOST_VERSION: 1.60.0
      BOOST_LINKAGE: static
      QT_VERSION: 5.6
    - MSVC_VERSION: 14.0
      BOOST_VERSION: 1.60.0
      BOOST_LINKAGE: shared
      QT_VERSION: 5.6
    - MSVC_VERSION: 12.0
      BOOST_VERSION: 1.58.0
      BOOST_LINKAGE: static
      QT_VERSION: 5.6
    - MSVC_VERSION: 12.0
      BOOST_VERSION: 1.58.0
      BOOST_LINKAGE: shared
      QT_VERSION: 5.6

install:
  - ps: |
      $env:MSVS_HOME="%ProgramFiles(x86)%\Microsoft Visual Studio $env:MSVC_VERSION"
      switch ($env:PLATFORM) {
        "x86" {
          $env:VCVARS_PLATFORM="x86"
        }
        "Win32" {
          $env:VCVARS_PLATFORM="x86"
        }
        "x64" {
          $env:VCVARS_PLATFORM="amd64"
        }
      }
      $boost_home="C:\Libraries\boost"
      if (!($env:BOOST_VERSION -eq "1.56.0")) {
        $boost_home_version_suffix="_$env:BOOST_VERSION" -replace "\.", '_'
        $boost_home="$boost_home$boost_home_version_suffix"
      }
      $boost_library_folder_platform_suffix=""
      switch ($env:PLATFORM) {
        "x86" {
          $boost_library_folder_platform_suffix="lib32"
        }
        "Win32" {
          $boost_library_folder_platform_suffix="lib32"
        }
        "x64" {
          $boost_library_folder_platform_suffix="lib64"
        }
      }
      $boost_library_folder_toolchain_suffix="-msvc-$env:MSVC_VERSION"
      $env:BOOST_INCLUDE_FOLDER="$boost_home"
      $env:BOOST_LIBRARY_FOLDER="$boost_home\$boost_library_folder_platform_suffix$boost_library_folder_toolchain_suffix"
      switch ($env:BOOST_LINKAGE) {
        "static" {
          $env:BOOST_USE_STATIC_LIBS="ON"
        }
        "shared" {
          $env:BOOST_USE_STATIC_LIBS="OFF"
        }
      }
      $qt_folder_platform_suffix=""
      switch ($env:PLATFORM) {
        "x86" {
          $qt_folder_platform_suffix=""
        }
        "Win32" {
          $qt_folder_platform_suffix=""
        }
        "x64" {
          $qt_folder_platform_suffix="_64"
        }
      }
      $qt_folder_toolchain_suffix=""
      switch ($env:MSVC_VERSION) {
        "14.0" {
          $qt_folder_toolchain_suffix="msvc2015"
        }
        "12.0" {
          $qt_folder_toolchain_suffix="msvc2013"
        }
        "11.0" {
          $qt_folder_toolchain_suffix="msvc2012"
        }
        "10.0" {
          $qt_folder_toolchain_suffix="msvc2010"
        }
        "9.0" {
          $qt_folder_toolchain_suffix="msvc2008"
        }
      }
      $qt_home_version_path="C:\Qt\$env:QT_VERSION"
      $env:QT_HOME="$qt_home_version_path\$qt_folder_toolchain_suffix$qt_folder_platform_suffix"
      $env:QT_BIN_FOLDER="$env:QT_HOME\bin"
      switch ($env:CONFIGURATION) {
        "Debug" {
          $env:CMAKE_BUILD_CONFIG="DEBUG"
        }
        "Release" {
          $env:CMAKE_BUILD_CONFIG="RELEASE"
        }
      }
      $cmake_generator_msvc_version_suffx=" $env:MSVC_VERSION" -replace "([\d]+)\.([\d]+)", '$1'
      $cmake_generator_toolchain="Visual Studio$cmake_generator_msvc_version_suffx"
      $cmake_generator_platform_suffix=""
      switch ($env:PLATFORM) {
        "x86" {
          $cmake_generator_platform_suffix=""
        }
        "Win32" {
          $cmake_generator_platform_suffix=""
        }
        "x64" {
          $cmake_generator_platform_suffix=" Win64"
        }
      }
      $env:CMAKE_GENERATOR="$cmake_generator_toolchain$cmake_generator_platform_suffix"

before_build:
  - cmd: call "%MSVS_HOME%\VC\vcvarsall.bat" %VCVARS_PLATFORM%
  - cmd: set PATH=%BOOST_LIBRARY_FOLDER%;%QT_BIN_FOLDER%;%PATH%

build_script:
  - ps: |
      New-Item "$env:APPVEYOR_BUILD_FOLDER\build" -type directory
      Set-Location -Path "$env:APPVEYOR_BUILD_FOLDER\build"
      if ($env:QT_VERSION -match "5\.*") {
        cmake -D BOOST_INCLUDEDIR=$env:BOOST_INCLUDE_FOLDER -D BOOST_LIBRARYDIR=$env:BOOST_LIBRARY_FOLDER -D Boost_USE_STATIC_LIBS=$env:BOOST_USE_STATIC_LIBS -D Boost_NO_SYSTEM_PATHS=ON -D Qt5Core_DIR=$env:QT_HOME\lib\cmake\Qt5Core -D Qt5Gui_DIR=$env:QT_HOME\lib\cmake\Qt5Gui -D Qt5Widgets_DIR=$env:QT_HOME\lib\cmake\Qt5Widgets -D gtest_force_shared_crt=ON -G "$env:CMAKE_GENERATOR" $env:APPVEYOR_BUILD_FOLDER
      } elseif ($env:QT_VERSION -match "4\.*") {
        cmake -D BOOST_INCLUDEDIR=$env:BOOST_INCLUDE_FOLDER -D BOOST_LIBRARYDIR=$env:BOOST_LIBRARY_FOLDER -D Boost_USE_STATIC_LIBS=$env:BOOST_USE_STATIC_LIBS -D Boost_NO_SYSTEM_PATHS=ON -D QT_QMAKE_EXECUTABLE=$env:QT_QMAKE_EXECUTABLE -D gtest_force_shared_crt=ON -G "$env:CMAKE_GENERATOR" $env:APPVEYOR_BUILD_FOLDER
      } else {
        throw "Unsupported version of Qt: $env:QT_VERSION."
      }
      if ($LastExitCode -ne 0) {
        throw "Generation of project failed with exit code $LastExitCode."
      }
      cmake --build . --config $env:CONFIGURATION -- /maxcpucount /verbosity:normal /logger:"C:\Program Files\AppVeyor\BuildAgent\Appveyor.MSBuildLogger.dll"
      if ($LastExitCode -ne 0) {
        throw "Build failed with exit code $LastExitCode."
      }

test_script:
  - cmd: cd /d "%APPVEYOR_BUILD_FOLDER%\build"
  - cmd: ctest --build-config %CONFIGURATION% --verbose

artifacts:
  - path: build\example\ma_asio_performance_test_client\$(configuration)\*.exe
    name: ma_asio_performance_test_client
  - path: build\example\ma_async_basics\$(configuration)\*.exe
    name: ma_async_basics
  - path: build\example\ma_async_basics2\$(configuration)\*.exe
    name: ma_async_basics2
  - path: build\example\ma_echo_server\$(configuration)\*.exe
    name: ma_echo_server
  - path: build\example\ma_nmea_client\$(configuration)\*.exe
    name: ma_nmea_client
  - path: build\example\ma_qt_echo_server\$(configuration)\*.exe
    name: ma_qt_echo_server
  - path: build\test\ma_async_connect_test\$(configuration)\*.exe
    name: ma_async_connect_test
  - path: build\test\ma_handler_storage_test\$(configuration)\*.exe
    name: ma_handler_storage_test
  - path: build\test\ma_lockable_wrapper_test\$(configuration)\*.exe
    name: ma_lockable_wrapper_test
  - path: build\test\ma_shared_ptr_factory_test\$(configuration)\*.exe
    name: ma_shared_ptr_factory_test
  - path: build\test\ma_sp_singleton_test\$(configuration)\*.exe
    name: ma_sp_singleton_test
  - path: build\test\ma_windows_console_signal_test\$(configuration)\*.exe
    name: ma_windows_console_signal_test

